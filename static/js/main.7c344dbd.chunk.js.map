{"version":3,"sources":["utils/common.js","components/raw_grid.js","components/toolbar.js","components/control_panel.js","App.js","reportWebVitals.js","index.js"],"names":["unitConversion","metricUnits","result","Object","keys","map","key","value","Math","round","parseFloat","ft","inc","formatUnit","_ref","concat","roomColorSchema","roomsLayout","Grid","plotDim","builtupDim","mainRef","scale","config","ref","useRef","selectedRoom","pointWithLine","dragging","drawRooms","svg","builtupStart","builtupBreadth","builtupLength","bWallTkn","curX","X","curY","Y","room","i","newDim","percent","roomArea","height","sqrt","width","roomDimCalc","append","attr","wallThick","style","on","d","j","d3","classed","selectAll","remove","cur","this","console","log","attributes","parseInt","x","y","coords","d3s","selectedRect","circle","_groups","text","roomType","drawGrid","sideBarWidth","document","getElementsByClassName","offsetWidth","current","clientWidth","clientHeight","plotLength","plotBreadth","pWallTkn","plotStart","zoom","handleZoom","e","transform","domain","range","xAxis","ticks","yAxis","xAxisGrid","tickSize","tickFormat","yAxisGrid","call","tooltip","html","clientX","clientY","id","arguments","length","undefined","break_ratio","element","newAreas","baseVal","noOfRect","index","temp","push","breakArea","useEffect","window","addEventListener","react_default","a","createElement","ToolBar","theme","updateColor","_useState","useState","_useState2","slicedToArray","pWallColor","_useState3","_useState4","bWallColor","ThemeProvider","CssBaseline","Box","sx","flexGrow","AppBar","position","Toolbar","disableGutters","Typography","variant","component","display","ControlPanel","props","updateCallback","objectSpread","metrics","setMetrics","controlPanel","title","gap","readOnly","updateMeasurements","event","_id$split","split","_id$split2","metric","unit","unitUpdate","defineProperty","target","metricUpdate","builtUnitUpdate","List","className","subheader","ListSubheader","control","_control","ftCtr","inCtr","ListItem","TextField","assign","required","type","InputProps","padding","fontSize","marginRight","endAdornment","InputAdornment","size","onChange","createTheme","palette","primary","main","secondary","darkTheme","mode","App","defaultConfig","convertedUnits","units","setUnits","toolbar","data","raw_grid","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.7c344dbd.chunk.js","sourcesContent":["\r\nconst scale = 20;\r\nconst scaleBy = 1.01;\r\n\r\nconst unitConversion = (metricUnits) => {\r\n    const result = {};\r\n    Object.keys(metricUnits).map(key => {\r\n        const value = metricUnits[key]\r\n        result[key] = Math.round((parseFloat(value.ft) + parseFloat(value.inc/12)) * scale, 2)\r\n    })\r\n    return result;\r\n}\r\n\r\nconst zoomStage = (event, stageRef) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      stage.scale({ x: newScale, y: newScale });\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      }\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n    return\r\n  }\r\n\r\nconst formatUnit = ({ ft, inc }) => `${ft}'${inc}\"`\r\n\r\nexport { unitConversion, zoomStage, formatUnit };\r\n","import React, { useRef, useEffect } from 'react';\r\nimport vec2 from 'vec2';\r\nimport { pointWithLine } from 'geometric';\r\nimport { createRoot } from 'react-dom/client'\r\nimport * as d3 from 'd3';\r\nimport * as d3s from 'd3-selection';\r\nimport emoji from 'd3moji';\r\nimport { formatUnit } from '../utils/common.js';\r\n\r\nimport '../styles/grid_style.css'\r\n\r\nconst roomColorSchema = ['#1C315E', '#227C70', '#88A47C', '#E6E2C3']\r\nconst roomDimCalc = (percent, builtupLength, builtupBreadth) => {\r\n    // assuming below that Width and Height are the rectangle's\r\n    const roomRatio = 1.55 // 2:1 breadth: length\r\n    const roomArea = (builtupLength * builtupBreadth) * percent / 100;\r\n    const height = Math.sqrt(roomArea/roomRatio);\r\n    const width = roomArea/height;\r\n    \r\n    // const roomRatio = width / height;\r\n\r\n    // const roomRatioSq = Math.pow( roomRatio, 2 );\r\n\r\n    let rotate;\r\n    // if (builtupLength > builtupBreadth && builtupLength / builtupBreadth > roomRatio) { // wider aspect than the image\r\n    //     newHeight = builtupBreadth;\r\n    //     rotate = 0;\r\n    // } else if (builtupBreadth > builtupLength && builtupBreadth / builtupLength > roomRatio) { // skinnier aspect than the image rotated 90 degrees\r\n    //     newHeight = builtupLength;\r\n    //     rotate = Math.PI / 2;\r\n    // } else {\r\n    //     var hPrime = (roomRatio * builtupLength - roomRatioSq * builtupBreadth) / ( 1 - roomRatioSq );\r\n    //     var wPrime = roomRatio * (builtupBreadth - hPrime);\r\n    //     rotate = Math.atan2( hPrime, wPrime );\r\n    //     var sine = Math.sin(rotate);\r\n    //     if (sine == 0) {\r\n    //         newHeight = builtupBreadth;\r\n    //     } else {\r\n    //         newHeight = (builtupLength - wPrime) / sine;\r\n    //     }\r\n    // }\r\n    return {width, height};\r\n}\r\n\r\nconst breakArea = (id='built-rect-inner', break_ratio=0.25) => {\r\n    const element = d3.select(`#${id}`)._groups[0][0]\r\n    // Break the width and height based on ratio and cal the coordinates\r\n    const width = element.width.baseVal.value\r\n    const height = element.height.baseVal.value\r\n    const newAreas = []\r\n    const noOfRect = 1/break_ratio\r\n\r\n    console.log('roomsLayout', roomsLayout)\r\n    for(let index=0;index<noOfRect;index++) {\r\n        const temp = {\r\n            roomType: `${index}`,\r\n            percent: 100*break_ratio,\r\n            wallThick: 4\r\n        }\r\n        newAreas.push(temp)\r\n    }\r\n    roomsLayout = [ ...newAreas ]\r\n}\r\n\r\nvar roomsLayout = \r\n[\r\n    // {\r\n    //     x: 0, y: 0,\r\n    //     id: 1\r\n    //     minWidth: 200,\r\n    //     minHeight: 150,\r\n    //     wallThick: 2,\r\n    //     quadrant: 1,\r\n    //     roomType: 'master_bed',\r\n    //     percent: 25,\r\n    // },\r\n    // {\r\n    //     x: 0, y: 0,\r\n    //     minWidth: 200,\r\n    //     minHeight: 150,\r\n    //     wallThick: 2,\r\n    //     quadrant: 2,\r\n    //     roomType: 'guest_bed',\r\n    //     percent: 25\r\n    // },\r\n    // {\r\n    //     x: 0, y: 0,\r\n    //     minWidth: 200,\r\n    //     minHeight: 150,\r\n    //     wallThick: 2,\r\n    //     quadrant: 4,\r\n    //     roomType: 'living',\r\n    //     percent: 21\r\n    // },\r\n    // {\r\n    //     x: 0, y: 0,\r\n    //     minWidth: 200,\r\n    //     minHeight: 150,\r\n    //     wallThick: 2,\r\n    //     quadrant: 3,\r\n    //     roomType: 'pooja',\r\n    //     percent: 3\r\n    // },\r\n    // {\r\n    //     x: 0, y: 0,\r\n    //     minWidth: 200,\r\n    //     minHeight: 150,\r\n    //     wallThick: 2,\r\n    //     quadrant: 3,\r\n    //     roomType: 'kitchen',\r\n    //     percent: 10\r\n    // },\r\n    // {\r\n    //     x: 0, y: 0,\r\n    //     minWidth: 200,\r\n    //     minHeight: 150,\r\n    //     wallThick: 2,\r\n    //     quadrant: 3,\r\n    //     roomType: 'stairs',\r\n    //     percent: 5\r\n    // },\r\n]\r\n\r\nconst adjustRoomsLayout = (selectedRect) => {\r\n    \r\n}\r\n\r\nconst Grid = ({ plotDim, builtupDim, scale, mainRef, config }) => {\r\n    const ref = useRef()\r\n\r\n    const line = [[1, 0], [1, 2]];\r\n    const rectangle = [[0, 0], [0, 1], [1, 1], [1, 0]];\r\n    const ptLine = pointWithLine([0, 1], line); // [[0, 0], [1, 1]]\r\n    let selectedRoom = null;\r\n    let dragging = null;\r\n\r\n    const resize = () => {\r\n        // drawGrid()\r\n    }\r\n\r\n    const drawRooms = (svg, builtupStart, builtupBreadth, builtupLength, bWallTkn) => {\r\n        let curX = builtupStart.X;\r\n        let curY = builtupStart.Y;\r\n        roomsLayout.map((room, i) => {\r\n            const newDim = roomDimCalc(room.percent, builtupBreadth, builtupLength)\r\n            svg.append('rect')\r\n                .attr('id', `room-${i}`)\r\n                .attr('class', 'room-rect')\r\n                .attr('x', curX)\r\n                .attr('y', curY)\r\n                .attr('width', newDim.width)\r\n                .attr('height', newDim.height)\r\n                .attr('stroke', '#400000')\r\n                .attr('stroke-width', room.wallThick)\r\n                .attr('fill', roomColorSchema[i%4])\r\n                .style('opacity', 0.5)\r\n                .on('click', function (d, j) {\r\n                    // Find previously selected, unselect\r\n                    d3.select(\".selected-room\").classed(\"selected-room\", false);\r\n                    svg.selectAll(\"circle\").remove()\r\n\r\n                    // Select current item\r\n                    const cur = d3.select(this);\r\n                    cur.classed(\"selected-room\", true);\r\n                     \r\n                    selectedRoom = `room-${i}`\r\n                    console.log(this, cur, d, j)\r\n\r\n                    const attr = this.attributes;\r\n                    svg.append('circle')\r\n                        .attr('class', 'resize-circle')\r\n                        .attr('cx', parseInt(attr.x.value) + parseInt(attr.width.value))\r\n                        .attr('cy', parseInt(attr.y.value) + parseInt(attr.height.value))\r\n                        .attr('r', 5)\r\n                        .attr('fill', 'blue')\r\n                        .on('mousedown', function(d,i){\r\n                            dragging = true\r\n                        })\r\n                        .on(\"mouseup\", function(d, i){\r\n                            dragging = false\r\n                        })\r\n                        .on(\"mousemove\", function(d, i){\r\n                                let coords = d3s.pointers(d)[0]\r\n                                const selectedRect = d3.select(`#${selectedRoom}`)\r\n                                const circle = d3.select(this)\r\n                                if(dragging === true) {\r\n                                    circle.attr('cx', parseInt(coords[0]))\r\n                                    circle.attr('cy', parseInt(coords[1]))\r\n\r\n                                    selectedRect.attr('width', parseInt(coords[0]) - parseInt(selectedRect._groups[0][0].attributes.x.value))\r\n                                    selectedRect.attr('height', parseInt(coords[1]) - parseInt(selectedRect._groups[0][0].attributes.y.value))\r\n                                    adjustRoomsLayout(selectedRect)\r\n                                }\r\n                            })\r\n                    }\r\n                )\r\n            \r\n            svg.append('text')\r\n                .text(room.roomType)\r\n                .attr('width', 30)\r\n                .attr('height', 30)\r\n                .attr('x', curX + newDim.width/2 - 30)\r\n                .attr('y', curY + newDim.height/2)\r\n            svg.append(\"svg:image\")\r\n            .attr('x', curX + newDim.width/2 - 5)\r\n            .attr('y', curY + newDim.height - 31)\r\n            .attr('width', 30)\r\n            .attr('height', 34)\r\n            .attr(\"xlink:href\", \"door_icon.svg\")\r\n            // .attr('transform', 'rotate(180 0 0)')\r\n            \r\n            curX = curX + newDim.width\r\n            if (builtupStart.X + builtupLength - 50 <= curX) {\r\n                curY = curY + newDim.height\r\n                curX = builtupStart.X + bWallTkn/2 + 1;\r\n            }\r\n        })\r\n    }\r\n\r\n    const drawGrid = () => {\r\n\r\n        const sideBarWidth = document.getElementsByClassName('MuiList-root')[0].offsetWidth;\r\n        const width = mainRef.current.clientWidth - sideBarWidth;\r\n        const height = mainRef.current.clientHeight;\r\n\r\n        const { plotLength, plotBreadth, pWallTkn } = plotDim;\r\n        const { builtupLength, builtupBreadth, bWallTkn } = builtupDim;\r\n\r\n        const plotStart = {\r\n            X: (width/2) - (plotLength/2),\r\n            Y: (height/2) - (plotBreadth/2)\r\n        }\r\n\r\n        const builtupStart = {\r\n            X: (width/2) - (builtupLength/2),\r\n            Y: (height/2) - (builtupBreadth/2)\r\n        }\r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        svg.selectAll(\"rect\").remove()\r\n        svg.selectAll(\"text\").remove()\r\n        svg.selectAll(\"image\").remove()\r\n\r\n        const zoom = d3.zoom().on('zoom', handleZoom);\r\n\r\n        const handleZoom = (e) => {\r\n            d3.select('svg')\r\n                .attr('transform', e.transform);\r\n        }\r\n\r\n        const initZoom = () => {\r\n            d3.select('svg g')\r\n                .call(zoom);\r\n        }\r\n\r\n        const x = d3.scaleLinear().domain([0, 1]).range([0, width]);\r\n        const y  = d3.scaleLinear().domain([0, 1]).range([height, 0]);\r\n        const xAxis = d3.axisBottom(x).ticks(1);\r\n        const yAxis = d3.axisLeft(y).ticks(1);\r\n        const xAxisGrid = d3.axisBottom(x).tickSize(-height).tickFormat('').ticks(145);\r\n        const yAxisGrid = d3.axisLeft(y).tickSize(-width).tickFormat('').ticks(100);\r\n\r\n        // Create grids.\r\n        svg.append('g')\r\n        .attr('class', 'x axis-grid')\r\n        .attr('transform', 'translate(0,' + height + ')')\r\n        .call(xAxisGrid);\r\n        svg.append('g')\r\n        .attr('class', 'y axis-grid')\r\n        .call(yAxisGrid);\r\n        // Create axes.\r\n        svg.append('g')\r\n        .attr('class', 'x axis')\r\n        .attr('transform', 'translate(0,' + height + ')')\r\n        .call(xAxis);\r\n        svg.append('g')\r\n        .attr('class', 'y axis')\r\n        .call(yAxis);\r\n\r\n        // create a tooltip\r\n        const tooltip = d3.select(\"#main\")\r\n            .append(\"text\")\r\n            .attr(\"class\", \"tooltip\")\r\n            .style(\"opacity\", 0)\r\n\r\n        // Gradient\r\n        //Append a defs (for definition) element to your SVG\r\n        var defs = svg.append(\"defs\");\r\n\r\n        //Append a linearGradient element to the defs and give it a unique id\r\n        var linearGradient = defs.append(\"linearGradient\")\r\n            .attr(\"id\", \"linear-gradient\");\r\n        //Diagonal gradient\r\n        linearGradient\r\n        .attr(\"x1\", \"0%\")\r\n        .attr(\"y1\", \"0%\")\r\n        .attr(\"x2\", \"100%\")\r\n        .attr(\"y2\", \"100%\");\r\n            \r\n        svg.append('rect')\r\n            .attr(\"id\", \"plot-rect\")\r\n            .attr('x', plotStart.X)\r\n            .attr('y', plotStart.Y)\r\n            .attr('width', plotLength)\r\n            .attr('height', plotBreadth)\r\n            .attr('stroke', '#B1ACE6')\r\n            .attr('stroke-width', pWallTkn)\r\n            .attr('fill', 'transparent')\r\n            .style('opacity', 0.5)\r\n            .on('mousemove', function (d, i) {\r\n                tooltip.style(\"opacity\", 1)\r\n                    .html(`x: ${d.clientX-plotStart.X}, y:${d.clientY-plotStart.Y}`)\r\n                    .attr('x', d.clientX-plotStart.X)\r\n                    .attr('y', d.clientY-plotStart.Y)})\r\n            .on('mouseover', function (d, i) {\r\n                d3.select(this).attr(\"r\", 10)\r\n                    .style(\"fill\", \"lightblue\")\r\n                    .style('opacity', 0.5);\r\n            })\r\n            .on('mouseout', function (d, i) {\r\n                d3.select(this).attr(\"r\", 10)\r\n                    .style(\"fill\", \"transparent\")\r\n                    .style('opacity', 1);\r\n                tooltip.style(\"opacity\", 0)\r\n            })\r\n\r\n        svg.append('rect')\r\n            .attr(\"id\", \"plot-rect-inner\")\r\n            .attr('x', plotStart.X + pWallTkn/2)\r\n            .attr('y', plotStart.Y + pWallTkn/2)\r\n            .attr('width', plotLength-pWallTkn)\r\n            .attr('height', plotBreadth-pWallTkn)\r\n            .attr('stroke', '#776ed3')\r\n            .attr('stroke-width', 0.5)\r\n            .attr('fill', 'transparent');\r\n\r\n        svg.append('rect')\r\n            .attr(\"id\", \"plot-rect-outer\")\r\n            .attr('x', plotStart.X - pWallTkn/2)\r\n            .attr('y', plotStart.Y - pWallTkn/2)\r\n            .attr('width', plotLength+pWallTkn)\r\n            .attr('height', plotBreadth+pWallTkn)\r\n            .attr('stroke', '#776ed3')\r\n            .attr('stroke-width', 0.5)\r\n            .attr('fill', 'transparent');\r\n        \r\n        const metricLabel = svg.append(\"text\")\r\n            .attr(\"x\", plotStart.X)\r\n            .attr(\"y\", height/2 + 8)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr('class', 'rect-side-breadth')\r\n            .text(formatUnit(config.plotBreadth))\r\n            .style('text-anchor', 'end')\r\n\r\n        svg.append(\"text\")\r\n           .attr(\"x\", width/2)\r\n           .attr(\"y\", plotStart.Y)\r\n           .attr(\"text-anchor\", \"middle\")\r\n           .attr('class', 'rect-side-length')\r\n           .text(formatUnit(config.plotLength))\r\n        \r\n        \r\n        svg.append('line')\r\n            .attr('x1', width/2)\r\n            .attr('y1', plotStart.Y)\r\n            .attr('x2', width/2)\r\n            .attr('y2', height - plotStart.Y)\r\n            .attr('stroke', '#000000')\r\n            .style(\"stroke-dasharray\", (\"3, 3\"));\r\n        svg.append('text')\r\n            .attr('x', width/2 - 5)\r\n            .attr('y', plotStart.Y - 10)\r\n            .attr('stroke', '#000000')\r\n            .text('N')\r\n        svg.append('text')\r\n            .attr('x', width/2 - 5)\r\n            .attr('y', height - plotStart.Y + 20)\r\n            .attr('stroke', '#000000')\r\n            .text('S')\r\n        \r\n        svg.append('line')\r\n            .attr('x1', plotStart.X)\r\n            .attr('y1', height/2)\r\n            .attr('x2', width - plotStart.X)\r\n            .attr('y2', height/2)\r\n            .attr('stroke', '#000000')\r\n            .style(\"stroke-dasharray\", (\"3, 3\"));\r\n        svg.append('text')\r\n            .attr('x', plotStart.X - 20)\r\n            .attr('y', height/2)\r\n            .attr('stroke', '#000000')\r\n            .text('W')\r\n        svg.append('text')\r\n            .attr('x', width - plotStart.X + 10)\r\n            .attr('y', height/2)\r\n            .attr('stroke', '#000000')\r\n            .text('E')\r\n\r\n        svg.append('rect')\r\n            .attr('x', builtupStart.X)\r\n            .attr('y', builtupStart.Y)\r\n            .attr('width', builtupLength)\r\n            .attr('height', builtupBreadth)\r\n            .attr('stroke', '#D03D56')\r\n            .attr('stroke-width', bWallTkn)\r\n            .attr('fill', 'transparent')\r\n            .attr('opacity', 0.5)\r\n            .on('mousemove', function (d, i) {\r\n                tooltip.style(\"opacity\", 1)\r\n                    .html(`x: ${d.clientX-plotStart.X}, y:${d.clientY-plotStart.Y}`)\r\n                    .attr('x', d.clientX-plotStart.X)\r\n                    .attr('y', d.clientY-plotStart.Y)})\r\n            .on('mouseover', function (d, i) {\r\n                d3.select(this).attr(\"r\", 10)\r\n                    .style(\"fill\", \"lightblue\")\r\n                    .style('opacity', 0.5);\r\n            })\r\n            .on('mouseout', function (d, i) {\r\n                d3.select(this).attr(\"r\", 10)\r\n                    .style(\"fill\", \"transparent\")\r\n                    .style('opacity', 1);\r\n                tooltip.style(\"opacity\", 0)\r\n            });\r\n\r\n        svg.append('rect')\r\n            .attr(\"id\", \"built-rect-inner\")\r\n            .attr('x', builtupStart.X + bWallTkn/2)\r\n            .attr('y', builtupStart.Y + bWallTkn/2)\r\n            .attr('width', builtupLength-bWallTkn)\r\n            .attr('height', builtupBreadth-bWallTkn)\r\n            .attr('stroke', '#776ed3')\r\n            .attr('stroke-width', 0.5)\r\n            .attr('fill', 'transparent');\r\n\r\n        svg.append('rect')\r\n            .attr(\"id\", \"built-rect-outer\")\r\n            .attr('x', builtupStart.X - bWallTkn/2)\r\n            .attr('y', builtupStart.Y - bWallTkn/2)\r\n            .attr('width', builtupLength+bWallTkn)\r\n            .attr('height', builtupBreadth+bWallTkn)\r\n            .attr('stroke', '#776ed3')\r\n            .attr('stroke-width', 0.5)\r\n            .attr('fill', 'transparent');\r\n        \r\n        drawRooms(svg, builtupStart, builtupBreadth, builtupLength, bWallTkn)\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", builtupStart.X)\r\n            .attr(\"y\", height/2 + 8)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr('class', 'rect-side-breadth')\r\n            .text(formatUnit(config.builtupBreadth))\r\n            .style('text-anchor', 'start')\r\n\r\n        svg.append(\"text\")\r\n           .attr(\"x\", width/2)\r\n           .attr(\"y\", builtupStart.Y)\r\n           .attr(\"text-anchor\", \"middle\")\r\n           .attr('class', 'rect-side-length')\r\n           .text(formatUnit(config.builtupLength))\r\n\r\n        initZoom()\r\n        breakArea()\r\n    }\r\n\r\n    useEffect(() => {\r\n        drawGrid()\r\n    }, [plotDim, builtupDim]);\r\n\r\n    window.addEventListener('resize', resize)\r\n    return (\r\n        <svg id=\"main\" ref={ref}>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useState, useEffect } from 'react';\r\n// import ColorPicker from 'material-ui-color-picker'\r\nimport { AppBar, Box, Toolbar, Typography, CssBaseline } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\n\r\n\r\nconst ToolBar = ({ theme, updateColor }) => {\r\n\r\n    const [pWallColor, setPWallColor] = useState('#000000');\r\n    const [bWallColor, setBWallColor] = useState('#800000');\r\n\r\n    useEffect(() => {\r\n        console.log('updateColor', pWallColor, bWallColor)\r\n        updateColor(pWallColor, bWallColor)\r\n    }, [pWallColor, bWallColor])\r\n\r\n    return (\r\n    <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar disableGutters>\r\n            <Typography variant=\"span\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Plot Layout\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1, display: 'flex' }}>\r\n                <Typography variant=\"span\" component=\"div\" sx={{  }}>\r\n                  Plot wall color:\r\n                </Typography>\r\n                {/* <ColorPicker\r\n                    name='plot-color'\r\n                    value={pWallColor}\r\n                    onChange={color => setPWallColor(color)}\r\n                /> */}\r\n                <Typography variant=\"span\" component=\"div\" sx={{  }}>\r\n                  Builtup wall color:\r\n                </Typography>\r\n                {/* <ColorPicker\r\n                    name='builtup-color'\r\n                    value={bWallColor}\r\n                    onChange={color => setBWallColor(color)}\r\n                /> */}\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </ThemeProvider>\r\n    );\r\n  }\r\n\r\nexport default ToolBar;\r\n","import React, { useState } from 'react';\r\nimport { Box, TextField, InputAdornment, ListSubheader,\r\n         List, ListItem, Typography, CssBaseline } from '@mui/material';\r\nimport { ThemeProvider, styled } from \"@mui/material/styles\";\r\n\r\nexport default function ControlPanel ({ props, theme, updateCallback }) {\r\n    const [metrics, setMetrics] = useState({ ...props })\r\n\r\n    const controlPanel = [\r\n        [{\r\n            id: 'plotLength.ft',\r\n            title: 'Plot Length',\r\n            value: metrics.plotLength.ft,\r\n            // helperText: \"Specify length of the plot\"\r\n        },\r\n        {\r\n            id: 'plotLength.inc',\r\n            value: metrics.plotLength.inc,\r\n            // helperText: \"Specify length of the plot\"\r\n        }],\r\n        [{\r\n            id: \"plotBreadth.ft\",\r\n            title: \"Plot Breadth\",\r\n            value: metrics.plotBreadth.ft,\r\n            // helperText: \"Specify breadth of the plot\"\r\n        },\r\n        {\r\n            id: \"plotBreadth.inc\",\r\n            value: metrics.plotBreadth.inc,\r\n            // helperText: \"Specify breadth of the plot\"\r\n        }],\r\n        [{\r\n            id: \"pWallTkn.ft\",\r\n            title: \"Plot wall thickness\",\r\n            value: metrics.pWallTkn.ft,\r\n            // helperText: \"Specify length of the plot\"\r\n        },\r\n        {\r\n            id: \"pWallTkn.inc\",\r\n            value: metrics.pWallTkn.inc,\r\n            // helperText: \"Specify length of the plot\"\r\n        }],\r\n        [{\r\n            id: \"gap.ft\",\r\n            title: \"Setback gap\",\r\n            value: metrics.gap.ft,\r\n            // helperText: \"Leave offsets (setback)\"\r\n        },\r\n        {\r\n            id: \"gap.inc\",\r\n            value: metrics.gap.inc,\r\n            // helperText: \"Leave offsets (setback)\"\r\n        }],\r\n        [{\r\n            id: \"builtupLength.ft\",\r\n            title: \"Built-up Length\",\r\n            value: metrics.builtupLength.ft,\r\n            readOnly: true\r\n            // helperText: \"Specify length of the Builtup Area\"\r\n        },\r\n        {\r\n            id: \"builtupLength.inc\",\r\n            value: metrics.builtupLength.inc,\r\n            readOnly: true\r\n            // helperText: \"Specify length of the Builtup Area\"\r\n        }],\r\n        [{\r\n            id: \"builtupBreadth.ft\",\r\n            title: \"Built-up breadth\",\r\n            value: metrics.builtupBreadth.ft,\r\n            readOnly: true\r\n            // helperText: \"Specify breadth of the Builtup Area\"\r\n        },\r\n        {\r\n            id: \"builtupBreadth.inc\",\r\n            value: metrics.builtupBreadth.inc,\r\n            readOnly: true\r\n            // helperText: \"Specify breadth of the Builtup Area\"\r\n        }],\r\n        [{\r\n            id: \"bWallTkn.ft\", \r\n            title: \"Builtup wall thickness\",\r\n            value: metrics.bWallTkn.ft,\r\n            // helperText: \"Specify Builtup wall thickness\"\r\n        },\r\n        {\r\n            id: \"bWallTkn.inc\", \r\n            value: metrics.bWallTkn.inc,\r\n            // helperText: \"Specify Builtup wall thickness\"\r\n        }],\r\n    ]\r\n\r\n    const updateMeasurements = (event, id) => {\r\n        const [metric, unit] = id.split('.')\r\n        const unitUpdate = { [unit]: parseInt(event.target.value) }\r\n        const metricUpdate = { ...metrics[metric], ...unitUpdate }\r\n        const temp = { ...metrics, [metric]: metricUpdate }\r\n\r\n        // Update builtup dimension\r\n        const builtUnitUpdate = { builtupBreadth: { ft: temp.plotBreadth.ft - 2*temp.gap.ft,\r\n                                                    inc: temp.plotBreadth.inc - 2*temp.gap.inc, },\r\n                                  builtupLength: { ft: temp.plotLength.ft - 2*temp.gap.ft,\r\n                                                        inc: temp.plotLength.inc - 2*temp.gap.inc, } }\r\n        setMetrics({ ...temp, ...builtUnitUpdate })\r\n        console.log('OKK', temp, metricUpdate)\r\n        updateCallback(event, id, metrics)\r\n        // const value = event.target.value\r\n        // if(id.inccludes('-in') && value >=12) {\r\n        //     const feetInp = document.getElementById(id.replace('-in', '-ft'))\r\n        //     feetInp.\r\n        // }\r\n      }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <List className=\"control-list\"\r\n                subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                  Area measures\r\n                </ListSubheader>\r\n              }>\r\n                {controlPanel.map((control, index) => {\r\n                    const [ ftCtr, inCtr ] = control;\r\n                    return (\r\n                    <ListItem className=\"control-list-items\" key={ftCtr.id}>\r\n                    <Typography variant=\"body1\">\r\n                        {ftCtr.title}\r\n                    </Typography>\r\n                    <div className=\"input-metrics\">\r\n                    <TextField \r\n                        {...ftCtr}\r\n                        required\r\n                        key={ftCtr.id}\r\n                        type=\"number\"\r\n                        InputProps={{\r\n                            readOnly: ftCtr.readOnly,\r\n                            style: { width: '4rem', padding: 0, fontSize: '0.85rem', marginRight: '5px'},\r\n                            endAdornment: <InputAdornment position=\"start\" style={{fontSize: '0.75rem'}}>ft</InputAdornment>,\r\n                        }}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => updateMeasurements(event, ftCtr.id)}\r\n                    />\r\n                    <TextField \r\n                        {...inCtr}\r\n                        required\r\n                        key={inCtr.id}\r\n                        type=\"number\"\r\n                        InputProps={{\r\n                            readOnly: inCtr.readOnly,\r\n                            style: { width: '4rem', padding: 0, fontSize: '0.85rem', marginRight: '5px'},\r\n                            endAdornment: <InputAdornment position=\"start\" style={{fontSize: '0.75rem'}}>in</InputAdornment>,\r\n                        }}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => updateMeasurements(event, inCtr.id)}\r\n                    />\r\n                    </div>\r\n                    </ListItem>)\r\n                })}\r\n                </List>\r\n        </ThemeProvider>\r\n    );\r\n  }\r\n","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from './components/raw_grid.js'\nimport ToolBar from './components/toolbar.js';\nimport ControlPanel from './components/control_panel.js'\n// import PlotLayout from './components/plot_layout.js'\n\nimport { unitConversion } from './utils/common.js'\n\nconst lightTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#0052cc',\n    },\n    secondary: {\n      main: '#edf2ff',\n    },\n  },\n});\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nconst App = () => {\n  const defaultConfig = {\n      plotBreadth: { ft: 20, inc: 0 },\n      plotLength: { ft: 30, inc: 0 },\n      pWallTkn: { ft: 0, inc: 5 },\n      gap: { ft: 1, inc: 0 },\n      bWallTkn: { ft: 0, inc: 4 },\n  }\n  defaultConfig.builtupBreadth = { ft: defaultConfig.plotBreadth.ft - 2*defaultConfig.gap.ft,\n                                   inc: defaultConfig.plotBreadth.inc - 2*defaultConfig.gap.inc }\n  defaultConfig.builtupLength = { ft: defaultConfig.plotLength.ft - 2*defaultConfig.gap.ft,\n                                  inc: defaultConfig.plotLength.inc - 2*defaultConfig.gap.inc }\n\n  const mainRef = useRef();\n  const [config, setConfig] = useState(defaultConfig);\n\n  const convertedUnits = unitConversion(defaultConfig)\n  const [units, setUnits] = useState(convertedUnits)\n\n  const updateConfig = (data, id, metrics) => {\n    const convertedUnits = unitConversion(metrics)\n    setUnits(convertedUnits)\n  };\n\n  const updateColor = (pWallColor, bWallColor) => {\n    setUnits( { ...units, pWallColor: pWallColor, bWallColor: bWallColor } )\n    console.log('updateColor', units)\n  };\n\n  return (\n    <div className=\"App\">\n        <ToolBar theme={darkTheme} updateColor={updateColor}/>\n        <div className='main-section' ref={mainRef}>\n          <ControlPanel props={config} theme={darkTheme} updateCallback={updateConfig}/>\n          {/* <PlotLayout config={units}/> */}\n          <Grid plotDim={units} builtupDim={units} mainRef={mainRef} config={config}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}